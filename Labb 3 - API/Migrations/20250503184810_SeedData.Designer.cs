// <auto-generated />
using Labb_3___API.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_3___API.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20250503184810_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb_3___API.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntrestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Spela och titta på fotboll",
                            IntrestName = "Fotboll"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Spela gitarr och lyssna på musik",
                            IntrestName = "Musik"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Utveckla applikationer och hemsidor",
                            IntrestName = "Programmering"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Besöka nya länder och kulturer",
                            IntrestName = "Resa"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Laga och njuta av god mat",
                            IntrestName = "Matlagning"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Ta bilder och redigera dem",
                            IntrestName = "Fotografi"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Hålla sig i form och träna",
                            IntrestName = "Träning"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Läsa böcker och skriva",
                            IntrestName = "Litteratur"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Titta på filmer och serier",
                            IntrestName = "Film"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Spela datorspel och brädspel",
                            IntrestName = "Spel"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Skapa och uppskatta konstverk",
                            IntrestName = "Konst"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Vandra och njuta av naturen",
                            IntrestName = "Natur"
                        });
                });

            modelBuilder.Entity("Labb_3___API.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MtmInterestId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MtmInterestId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MtmInterestId = 1,
                            Url = "https://www.fotbollskanalen.se/"
                        },
                        new
                        {
                            Id = 2,
                            MtmInterestId = 2,
                            Url = "https://open.spotify.com/"
                        },
                        new
                        {
                            Id = 3,
                            MtmInterestId = 3,
                            Url = "https://csharpskolan.se/borja-har/"
                        },
                        new
                        {
                            Id = 4,
                            MtmInterestId = 4,
                            Url = "https://www.trivago.se/"
                        },
                        new
                        {
                            Id = 5,
                            MtmInterestId = 5,
                            Url = "https://www.kitchenlab.se/k/matlagning/"
                        },
                        new
                        {
                            Id = 6,
                            MtmInterestId = 6,
                            Url = "https://www.gotaplatsensfoto.se/"
                        },
                        new
                        {
                            Id = 7,
                            MtmInterestId = 7,
                            Url = "https://tidal.com/"
                        },
                        new
                        {
                            Id = 8,
                            MtmInterestId = 8,
                            Url = "https://www.actic.se/"
                        },
                        new
                        {
                            Id = 9,
                            MtmInterestId = 9,
                            Url = "https://litteraturbanken.se/"
                        },
                        new
                        {
                            Id = 10,
                            MtmInterestId = 10,
                            Url = "https://www.netflix.com/se/"
                        },
                        new
                        {
                            Id = 11,
                            MtmInterestId = 11,
                            Url = "https://store.steampowered.com/"
                        },
                        new
                        {
                            Id = 12,
                            MtmInterestId = 12,
                            Url = "https://konst.se"
                        },
                        new
                        {
                            Id = 13,
                            MtmInterestId = 13,
                            Url = "https://www.sverigesnatur.org/"
                        },
                        new
                        {
                            Id = 14,
                            MtmInterestId = 14,
                            Url = "https://allsvenskan.se/"
                        },
                        new
                        {
                            Id = 15,
                            MtmInterestId = 15,
                            Url = "https://www.javascript.com/"
                        },
                        new
                        {
                            Id = 16,
                            MtmInterestId = 16,
                            Url = "https://www.gordonramsay.com/"
                        });
                });

            modelBuilder.Entity("Labb_3___API.Models.MtmInterest", b =>
                {
                    b.Property<int>("MtmInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MtmInterestId"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("MtmInterestId");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new
                        {
                            MtmInterestId = 1,
                            InterestId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            MtmInterestId = 2,
                            InterestId = 2,
                            PersonId = 1
                        },
                        new
                        {
                            MtmInterestId = 3,
                            InterestId = 3,
                            PersonId = 2
                        },
                        new
                        {
                            MtmInterestId = 4,
                            InterestId = 4,
                            PersonId = 2
                        },
                        new
                        {
                            MtmInterestId = 5,
                            InterestId = 5,
                            PersonId = 3
                        },
                        new
                        {
                            MtmInterestId = 6,
                            InterestId = 6,
                            PersonId = 3
                        },
                        new
                        {
                            MtmInterestId = 7,
                            InterestId = 2,
                            PersonId = 4
                        },
                        new
                        {
                            MtmInterestId = 8,
                            InterestId = 7,
                            PersonId = 4
                        },
                        new
                        {
                            MtmInterestId = 9,
                            InterestId = 8,
                            PersonId = 5
                        },
                        new
                        {
                            MtmInterestId = 10,
                            InterestId = 9,
                            PersonId = 5
                        },
                        new
                        {
                            MtmInterestId = 11,
                            InterestId = 10,
                            PersonId = 6
                        },
                        new
                        {
                            MtmInterestId = 12,
                            InterestId = 11,
                            PersonId = 6
                        },
                        new
                        {
                            MtmInterestId = 13,
                            InterestId = 12,
                            PersonId = 7
                        },
                        new
                        {
                            MtmInterestId = 14,
                            InterestId = 1,
                            PersonId = 7
                        },
                        new
                        {
                            MtmInterestId = 15,
                            InterestId = 3,
                            PersonId = 8
                        },
                        new
                        {
                            MtmInterestId = 16,
                            InterestId = 5,
                            PersonId = 8
                        });
                });

            modelBuilder.Entity("Labb_3___API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Anna",
                            LastName = "Andersson",
                            Phone = "0701234567"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Bertil",
                            LastName = "Berg",
                            Phone = "0739876543"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Cecilia",
                            LastName = "Carlsson",
                            Phone = "0761122334"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "David",
                            LastName = "Dahl",
                            Phone = "0709876543"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Eva",
                            LastName = "Eriksson",
                            Phone = "0734567890"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Fredrik",
                            LastName = "Frisk",
                            Phone = "0765432109"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Gina",
                            LastName = "Gustavsson",
                            Phone = "0701234567"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Henrik",
                            LastName = "Hansson",
                            Phone = "0739876543"
                        });
                });

            modelBuilder.Entity("Labb_3___API.Models.Link", b =>
                {
                    b.HasOne("Labb_3___API.Models.MtmInterest", "MtmInterest")
                        .WithMany("Links")
                        .HasForeignKey("MtmInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MtmInterest");
                });

            modelBuilder.Entity("Labb_3___API.Models.MtmInterest", b =>
                {
                    b.HasOne("Labb_3___API.Models.Interest", "Interest")
                        .WithMany("MtmInterest")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3___API.Models.Person", "Person")
                        .WithMany("MtmInterest")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Labb_3___API.Models.Interest", b =>
                {
                    b.Navigation("MtmInterest");
                });

            modelBuilder.Entity("Labb_3___API.Models.MtmInterest", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("Labb_3___API.Models.Person", b =>
                {
                    b.Navigation("MtmInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
